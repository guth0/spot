#!/bin/env bash

help(){
    echo "Usage: spot [OPTION]"
    echo ""
    echo "Control Options:"
    echo "  skip"
    echo "                  Skips to the next track"
    echo "  prev"
    echo "                  Goes to the previous track"
    echo "  playpause"
    echo "                  Pauses or Unpauses"
    echo "  play"
    echo "                  Unpauses the track"
    echo "  pause"
    echo "                  Pauses the track"
    echo "  stop"
    echo "                  Stops the track (Effectivly the same as pause)"
# Seek and Setposition do not work at the moment
#    echo "  seek [OFFSET]"
#    echo "                  Changes playerhead to the OFFSET second of the curent track"
#    echo "  setpos [ID] [POS]"
#    echo "                  Starts the song given by ID and sets the playerhead to the POS second"
    echo ""
    echo "Info Options:"
    echo "  artist"
    echo "                  Returns the artist of the current track"
    echo "                      blank if unavaible"
    echo "  title"
    echo "                  Returns the title of the current track*"
    echo "                      blank if unavaible"
    echo "  album"
    echo "                  Returns the album of the current track*"
    echo "                      blank if unavaible"
    echo "  creator"
    echo "                  Returns the creator of the current track*"
    echo "                      podcasts do not have an artist, instead the creator is in the album field"
    echo "                      so, you must use 'spot creator' to make sure you get values when playing a podcast"
    echo "  metadata"
    echo "                  Dumps the current metadata"
    echo ""
    echo "Property Options:"
    echo "  playstatus"
    echo "                  Returns the current status of spotify"
    echo "                      Either 'Playing' or 'Paused'"

    echo "  loop [OPTION]"
    echo "      status"
    echo "                  Retusn the loop status"
    echo "      set [STATUS] {flag}"
    echo "                  Sets the loop status to STATUS"
    echo "                      Options:"
    echo "                          'None', 'Playlist', 'Track'"
    echo "          -v, --verbose"
    echo "                  Returns DBus information"

    echo "  shuffle [OPTION]"
    echo "      status"
    echo "                  Returns shuffle status"
    echo "      set [STATUS] {flag}"
    echo "                  Sets the shuffle status to STATUS"
    echo "                      Options:"
    echo "                          true, false"
    echo "          -v, --verbose"
    echo "                  Returns DBus information"

    echo "  rate [OPTION]"
    echo "      status"
    echo "                  Returns the current rate"
    echo "      rate [VALUE] {flag}"
    echo "                  Sets the rate to VALUE"
    echo "                      Options:"
    echo "                          double from maxrate to minrate (inclusive)"
    echo "                          Example:  '0.9'"
    echo "          -v, --verbose"
    echo "                  Returns DBus information"
    echo "      max"
    echo "                  Returns the maximum rate available"
    echo "      min"
    echo "                  Returns the minimum rate available"

    echo "  volume [OPTION]"
    echo "      status"
    echo "                  Returns the current volume"
    echo "      set [VOLUME] {flag}"
    echo "                  Sets the volume to VOLUME"
    echo "                      Options:"
    echo "                          double from 0 to 1"
    echo "                          Exmaple: '0.5'"
    echo "          -v, --verbose"
    echo "                  Returns DBus information"
    
    echo "  position"
    echo "                  Returns the position in the current track in microseconds"
    echo "                      This has millisecond percision so the last three 0s are unused"
    echo ""
    echo "MIC Options:"
    echo "  help"
    echo "                  Displays this list"
}

db_dest="org.mpris.MediaPlayer2.spotify"
db_path="/org/mpris/MediaPlayer2"
db_object="org.mpris.MediaPlayer2.Player"

db_control()
{
    dbus-send --session --type=method_call --dest=$db_dest $db_path "$db_object.$1"
}

metadata()
{
    property_call Metadata    
}

artist()
{
    mdata=$(metadata)
    output="$(echo "$mdata" | grep -A 2 artist | tail -n 1 | sed 's/.*"\([^"]*\)".*/\1/')"


    echo "$output"

}

title()
{
    mdata=$(metadata)
    echo "$mdata"  | grep -A 1 title | tail -n 1 | sed 's/.*"\([^"]*\)".*/\1/'  
}

album()
{
    mdata=$(metadata)
    echo "$mdata"  | grep -A 1 ':album"' | tail -n 1 | sed 's/.*"\([^"]*\)".*/\1/'  
}

property_call()
{
    dbus-send --session --type=method_call --print-reply --dest=$db_dest $db_path org.freedesktop.DBus.Properties.Get string:$db_object string:$1 
}

property_set()
{
    output="$(dbus-send --print-reply --session --dest=$db_dest $db_path org.freedesktop.DBus.Properties.Set string:$db_object string:$1 variant:$2)"

    case "$3" in
        -v)
            echo "$output"
            ;;
        --verbose)
            echo "$output"
            ;;
    esac
}

status()
{
    output=$(property_call PlaybackStatus)
    echo "$output" | tail -n 1 | sed 's/.*"\([^"]*\)".*/\1/'
}

loopstatus()
{
    output=$(property_call LoopStatus)
    echo "$output" | tail -n 1 | awk -F " " '{print $3}' | tr -d '"'
}

setloopstatus()
{
    property_set LoopStatus "string:$1" $2
}

shufflestatus()
{
    output=$(property_call Shuffle)
    echo "$output" | tail -n 1 | awk -F " " '{print $3}'
}

setshufflestatus()
{
    property_set Shuffle "boolean:$1" $2
}

ratestatus()
{
    output=$(property_call Rate)
    echo "$output" | tail -n 1 | awk -F " " '{print $3}'
}

setratestatus()
{
    property_set Rate "double:$1" $2
}

maxrate()
{
    output=$(property_call MaximumRate)
    echo "$output" | tail -n 1 | awk -F " " '{print $3}'
}

minrate()
{
    output=$(property_call MinimumRate)
    echo "$output" | tail -n 1 | awk -F " " '{print $3}'
}

volumestatus()
{
    output=$(property_call Volume)
    echo "$output" | tail -n 1 | awk -F " " '{print $3}'
}

setvolume()
{
    property_set Volume "double:$1" $2
}

position()
{
    output=$(property_call Position)
    echo "$output" | tail -n 1| awk -F " " '{print $3}'
}

case "$1" in
    skip)
        db_control Next
        ;;
    prev)
        db_control Previous
        ;;
    playpause)
        db_control PlayPause
        ;;
    play)
        db_control Play
        ;;
    pause)
        db_control Pause
        ;;
    stop)
        db_control Stop
        ;;
    status)
        status
        ;;
    artist)
        artist
        ;;
    title)
        title
        ;;
    album)
        album
        ;;
    creator)
        output="$(artist)"

        if [ -z "$output" ]; then
            output="$(album)"
        fi

        echo "$output"
        ;;
    metadata)
        metadata
        ;;
    rate)
        case $2 in
            status)
                ratestatus
                ;;
            set)
                setratestatus $3 $4 
                ;;
            min)
                minrate
                ;;
            max)
                maxrate
                ;;
            *)
                echo "Invalid argument: '$2'"
                echo "Use 'spot help' to see usage"
                ;;   
        esac
        ;;
    loop)
        case $2 in
            status)
                loopstatus
                ;;
            set)
                setloopstatus $3 $4
                ;;

            *)
                echo "Invalid argument: '$2'"
                echo "Use 'spot help' to see usage"
                ;;   
        esac
        ;;
    shuffle)
        case $2 in
            status)
                shufflestatus
                ;;
            set)
                setshufflestatus $3 $4
                ;;

            *)
                echo "Invalid argument: '$2'"
                echo "Use 'spot help' to see usage"
                ;;   
        esac
        ;;
    volume)
        case $2 in
            status)
                volumestatus
                ;;
            set)
                setvolume $3 $4
                ;;
            *)
                echo "Invalid argument: '$2'"
                echo "Use 'spot help' to see usage"
                ;;   
        esac
        ;;
    position)
        position
        ;;
    help)
        help
        ;;
    *)
        echo "Invalid argument: '$1'"
        echo "Use 'spot help' to see usage"
        ;;
esac
